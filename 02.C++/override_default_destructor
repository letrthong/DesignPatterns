// CPP program without virtual destructor 
// causing undefined behavior
#include <iostream>
 
using namespace std;
 
class base {
  public:
    base()     
    { cout << "Constructing base\n"; }
    virtual ~base()
    { cout<< "Destructing base\n"; }     
};
 
class derived: public base {
  public:
    derived()     
     { cout << "Constructing derived\n"; }
    ~derived()  noexcept override = default;
};
 
int main()
{
  derived *d = new derived();  
  base *b = d;
  delete b;
  getchar();
  return 0;
}
 
